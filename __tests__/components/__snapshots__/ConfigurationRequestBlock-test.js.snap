// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ConfigurationRequestBlock component matches the snapshot 1`] = `
.c0 {
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);
}

.c1 {
  background-color: #fff;
  padding: 16px 24px;
}

.c1 label {
  display: inline-block;
  font-size: 1em;
  margin: 16px 0 8px;
}

.c9 {
  height: 48px;
  margin: 0;
  padding: 0 16px;
  border: 0;
  border-bottom: 2px solid rgba(0,0,0,0.2);
  background-color: #64a60a;
  color: #fff;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);
  border-radius: 4px;
  font: 400 14px/24px "Open Sans",sans-serif;
  text-transform: uppercase;
  cursor: pointer;
  vertical-align: top;
  -webkit-transition: background-color 150ms ease-out;
  transition: background-color 150ms ease-out;
}

.c9:hover,
.c9:focus {
  box-shadow: 0 4px 10px 0 rgba(0,0,0,0.2),inset 0 0 0 100px rgba( 0,0,0,0.1 );
}

.c9:active {
  -webkit-transform: translateY( 1px );
  -ms-transform: translateY( 1px );
  transform: translateY( 1px );
  box-shadow: none;
}

.c8 {
  text-shadow: 0px 0px 2px #000;
}

.c7 {
  min-width: 152px;
}

.c4 {
  width: 100%;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);
}

.c4.is-focused:not(.is-open) > .Select-control {
  border-color: #64a60a;
  box-shadow: none;
  background: #fff;
}

.c4 .Select-control {
  height: 48px;
  border-radius: 0;
}

.c4 .Select-placeholder {
  line-height: 48px;
}

.c4.Select--single > .Select-control .Select-value {
  line-height: 48px;
}

.c4 .Select-value-label {
  line-height: 48px;
}

.c4 .Select-input {
  line-height: 48px;
}

.c4 .Select-option {
  color: #000;
}

.c4 .Select-option.is-selected {
  background-color: #6dff003d;
}

.c4 .Select-option.is-focused {
  background-color: #64a60a;
  color: #fff;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c3 >:last-child {
  margin-left: 8px;
}

.c2 {
  font-weight: 300;
  font-size: 1.3em;
  margin: 0;
}

.c5 {
  white-space: nowrap;
  min-width: initial;
}

@media screen and ( max-width:800px ) {
  .c3 {
    display: block;
    height: auto;
  }
}

@media screen and ( max-width:800px ) {
  .c3 >:last-child {
    margin-left: 0;
    margin-top: 8px;
  }
}

@media screen and ( max-width:800px ) {
  .c6 {
    width: 100%;
    background-image: none;
    padding: 12px 16px;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <h2
      className="c2"
    >
      Configuration Service
    </h2>
    <p>
      <span>
        You have 1 available configuration service, which you can apply to one of your websites.
      </span>
      <br />
      <span>
        Select a website in the drop-down list below, and click on "request configuration service" to open the intake form.
      </span>
    </p>
    <span
      className="c3"
    >
      <div
        className="Select c4 is-clearable is-searchable Select--single"
        style={undefined}
      >
        <div
          className="Select-control"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={undefined}
        >
          <span
            className="Select-multi-value-wrapper"
            id="react-select-2--value"
          >
            <div
              className="Select-placeholder"
            >
              Select...
            </div>
            <div
              className="Select-input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-activedescendant="react-select-2--value"
                aria-describedby={undefined}
                aria-expanded="false"
                aria-haspopup="false"
                aria-label={undefined}
                aria-labelledby={undefined}
                aria-owns=""
                className={undefined}
                id={undefined}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                style={
                  Object {
                    "boxSizing": "content-box",
                    "width": "5px",
                  }
                }
                tabIndex={undefined}
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </span>
          <span
            className="Select-arrow-zone"
            onMouseDown={[Function]}
          >
            <span
              className="Select-arrow"
              onMouseDown={[Function]}
            />
          </span>
        </div>
      </div>
      <button
        className="c5 c6 c7 c8 c9"
        onClick={[Function]}
        type="button"
      >
        Request configuration service
      </button>
    </span>
  </div>
</div>
`;
